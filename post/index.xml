<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Technology blog by xiexiaojun</title>
    <link>https://xxjwxc.github.io/post/</link>
    <description>Recent content in Posts on Technology blog by xiexiaojun</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 11 Aug 2021 14:01:23 +0800</lastBuildDate><atom:link href="https://xxjwxc.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>golang elasticsearch 操作函数</title>
      <link>https://xxjwxc.github.io/post/eslog/</link>
      <pubDate>Wed, 11 Aug 2021 14:01:23 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/eslog/</guid>
      <description>#日志系统说明 先来传送门: 代码传送门 1、日志主要说明：谁在什么时间,在什么地方,做了什么事情，产生了什么影响，影响的变化因子。 2、日志系统主</description>
    </item>
    
    <item>
      <title>golang工作池库 限流器</title>
      <link>https://xxjwxc.github.io/post/gowplimit/</link>
      <pubDate>Tue, 18 May 2021 11:48:31 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/gowplimit/</guid>
      <description>gowp golang worker pool ,线程池 , 工作池 并发限制goroutine池。 限制任务执行的并发性，而不是排队的任务数。 无论排队多少任务，都不会阻止提交任务。 通过队</description>
    </item>
    
    <item>
      <title>consul 自动配置工具</title>
      <link>https://xxjwxc.github.io/post/consult/</link>
      <pubDate>Mon, 26 Apr 2021 10:01:23 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/consult/</guid>
      <description>consult 前言 consult 是对consul的二次封装，方便用户使用， consult 提供一系列函数操作consul consult 支持watcher consult 支持tag标签自动获取/自动更新 使用</description>
    </item>
    
    <item>
      <title>hanlp golang接口</title>
      <link>https://xxjwxc.github.io/post/gohanlp/</link>
      <pubDate>Sat, 27 Mar 2021 10:01:23 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/gohanlp/</guid>
      <description>GoHanlp 前言 Hanlp 是基于PyTorch和TensorFlow 2.x的面向研究人员和公司的多语言NLP库，用于在学术界和行业中推广最先进的深度学习技术。</description>
    </item>
    
    <item>
      <title>golang gRPC 和 HTTP 共用端口</title>
      <link>https://xxjwxc.github.io/post/grpc_http_same_port/</link>
      <pubDate>Wed, 24 Feb 2021 10:01:23 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/grpc_http_same_port/</guid>
      <description>前言 接口需要提供给其他业务组访问，但是 RPC 协议不同无法内调，对方问能否走 HTTP 接口 有时候，我们服务都需要同时支持grpc跟http(restful</description>
    </item>
    
    <item>
      <title>golang chunck 服务器长连接</title>
      <link>https://xxjwxc.github.io/post/chunck/</link>
      <pubDate>Fri, 25 Dec 2020 10:01:23 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/chunck/</guid>
      <description>http 协议的chunck概念 有时候，Web服务器生成HTTP Response是无法在Header就确定消息大小的，这时一般来说服务器将不会提供C</description>
    </item>
    
    <item>
      <title>go gin grpc 参数自动绑定工具</title>
      <link>https://xxjwxc.github.io/post/ginrpc/</link>
      <pubDate>Mon, 01 Jun 2020 18:01:00 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/ginrpc/</guid>
      <description>ginprc 注解路由，自动参数绑定工具 ![doc][image/ginrpc_doc.gif] golang gin 参数自动绑定工具 支持对象自动注册及注解路由 支持参数自动绑定 自带请求参数过滤及绑定实现 binding:&amp;ldquo;required&amp;rdquo; validator 支持 grpc-go 绑定模式 支持</description>
    </item>
    
    <item>
      <title>ssh 远程监控工具</title>
      <link>https://xxjwxc.github.io/post/jump/</link>
      <pubDate>Sat, 30 May 2020 04:01:23 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/jump/</guid>
      <description>jump remote monitoring . 远程监控工具 支持 默认配置 (jump config),保存公共配置 登录(jump in),远程登录(支持tab键) 监控(jump run),远程监控</description>
    </item>
    
    <item>
      <title>golang内存泄露分析(pprof)</title>
      <link>https://xxjwxc.github.io/post/pprof/</link>
      <pubDate>Wed, 20 May 2020 03:01:23 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/pprof/</guid>
      <description>pprof 安装及使用 golang pprof 用于对线上运行程序 性能监控与分析 工具安装 1 go get -u github.com/google/pprof 代码注入 1 import _ &amp;#34;net/http/pprof&amp;#34; 启动服务(6060端口为例) 1 go run ... 获取监控文件(heap</description>
    </item>
    
    <item>
      <title>golang ssh 远程终端控制</title>
      <link>https://xxjwxc.github.io/post/myssh/</link>
      <pubDate>Sat, 16 May 2020 23:01:23 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/myssh/</guid>
      <description>golang ssh 远程命令终端支持 一个封装，支持自动补全 代码： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 package main import ( &amp;#34;fmt&amp;#34; &amp;#34;time&amp;#34; _ &amp;#34;gmsec/internal/routers&amp;#34; // debug模式需要添</description>
    </item>
    
    <item>
      <title>gmsec golang 微服务集成框架</title>
      <link>https://xxjwxc.github.io/post/gmsec/</link>
      <pubDate>Tue, 12 May 2020 23:01:23 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/gmsec/</guid>
      <description>gmsec golang 微服务集成框架 grpc gorm 自动构建(gormt) grpc 参数自动绑定工具(ginrpc) dns 注册发现(mdns) markdown/mindoc 文档自动导出 安装 install proto环境安装 1</description>
    </item>
    
    <item>
      <title>gormt mysql数据库转换工具</title>
      <link>https://xxjwxc.github.io/post/gormt/</link>
      <pubDate>Wed, 22 Jan 2020 10:01:23 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/gormt/</guid>
      <description>gormt 一款 mysql 数据库转 struct 工具 可以将mysql数据库自动生成 golang 结构 自动生成快捷操作函数 支持索引,外键 带大驼峰命名规则 带json标签 交互界面模式 1 ./gormt -g=true</description>
    </item>
    
    <item>
      <title>Uber Go 风格指南中文版</title>
      <link>https://xxjwxc.github.io/post/uber_go_guide_cn/</link>
      <pubDate>Sun, 13 Oct 2019 21:10:31 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/uber_go_guide_cn/</guid>
      <description>uber_go_guide_cn Uber Go语言编码规范 Uber是世界领先的生活出行服务提供商，也是Go语言的早期adopter，根据Uber工程博客的内容，大致可以判断出Go</description>
    </item>
    
    <item>
      <title>go mod相关配置及说明</title>
      <link>https://xxjwxc.github.io/post/gomod/</link>
      <pubDate>Sun, 22 Sep 2019 16:16:40 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/gomod/</guid>
      <description>golang Modules 的最新命令说明 创建一个新的模块 1 go mod init [本项目mod名] 列出当前模块所有依赖项 1 go get -u github.com/xxjwxc/public@</description>
    </item>
    
    <item>
      <title>golang工作池库 workerpool</title>
      <link>https://xxjwxc.github.io/post/gowp/</link>
      <pubDate>Sun, 15 Sep 2019 11:48:31 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/gowp/</guid>
      <description>gowp golang worker pool ,线程池 , 工作池 并发限制goroutine池。 限制任务执行的并发性，而不是排队的任务数。 无论排队多少任务，都不会阻止提交任务。 通过队</description>
    </item>
    
    <item>
      <title>vue环境配置及vscode调试</title>
      <link>https://xxjwxc.github.io/post/vue/</link>
      <pubDate>Thu, 12 Sep 2019 11:48:31 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/vue/</guid>
      <description>mac安装 vue开发环境 本教程关于vue 在vscode 中的调试及开发。使用mac系统完成配置。 配置脚本在 vue_install.sh 以下展示 shell内容的详细信息。</description>
    </item>
    
    <item>
      <title>gorm mysql数据库转换工具</title>
      <link>https://xxjwxc.github.io/post/gormtools/</link>
      <pubDate>Sat, 01 Jun 2019 14:01:23 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/gormtools/</guid>
      <description>gorm-tools gorm mysql数据库转 struct 工具,可以将mysql数据库自动生成golang sturct结构，带大驼峰命名规则。带json标签 1. 通过当前目录co</description>
    </item>
    
    <item>
      <title>日志系统设计</title>
      <link>https://xxjwxc.github.io/post/loglistdef/</link>
      <pubDate>Sat, 25 May 2019 14:01:23 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/loglistdef/</guid>
      <description>#日志系统说明 先来传送门: 代码传送门 1、日志主要说明：谁在什么时间,在什么地方,做了什么事情，产生了什么影响，影响的变化因子。 2、日志系统主</description>
    </item>
    
    <item>
      <title>大驼峰转换工具</title>
      <link>https://xxjwxc.github.io/post/bigcamel/</link>
      <pubDate>Sat, 18 May 2019 16:01:23 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/bigcamel/</guid>
      <description>git 命令 大驼峰转换工具 法则 基本满足大驼峰命名法则 首字母大写 “_” 忽略后大写 大驼峰到网络标准json串自动转换 带有特殊字符特殊处理：如下 1 &amp;#34;ACL&amp;#34;, &amp;#34;API&amp;#34;, &amp;#34;ASCII&amp;#34;,</description>
    </item>
    
    <item>
      <title>git 使用帮助文档</title>
      <link>https://xxjwxc.github.io/post/githelp/</link>
      <pubDate>Wed, 01 May 2019 16:01:23 +0800</pubDate>
      
      <guid>https://xxjwxc.github.io/post/githelp/</guid>
      <description>git 命令 建立一个分支 git branch &amp;lt;项目名字 feature/test&amp;gt; 然后检查分支是否创建成功 git branch （q,退出） 切换到新分支 git checkout &amp;lt;项目名字 feature/test&amp;gt; 查看当前所有的更改情况 git status</description>
    </item>
    
  </channel>
</rss>
